"""
Алгоритм Кнута-Морриса-Пратта (КМП) - это алгоритм, который находит первое 
вхождение заданного образца в заданной строке. Алгоритм основан на 
использовании префикс-функции, которая для каждой позиции в образце определяет 
длину максимального суффикса, совпадающего с префиксом. С помощью этой функции 
алгоритм выполняет поиск образца в строке за время O(m+n), где m - длина 
образца, n - длина строки.
"""

# Определим функцию, которая будет вычислять префикс-функцию строки


def compute_prefix_function(pattern):
    m = len(pattern)
    pi = [0] * m  # создадим список для значений префикс-функции
    k = 0  # инициализируем индекс для обхода образца
    for q in range(1, m):  # обходим образец с индекса 1
        # корректируем индекс, если символы не совпадают
        while k > 0 and pattern[k] != pattern[q]:
            k = pi[k-1]  # переходим к предыдущему префиксу
        if pattern[k] == pattern[q]:  # если символы совпадают, увеличиваем индекс
            k += 1
        pi[q] = k  # заполняем значение префикс-функции
    return pi

# Определим функцию, которая будет искать строку-образец в строке-тексте


def kmp_search(text, pattern):
    m = len(pattern)
    n = len(text)
    # вычислим префикс-функцию для образца
    pi = compute_prefix_function(pattern)
    q = 0  # инициализируем индекс для обхода текста
    for i in range(n):  # обходим текст с индекса 0
        # корректируем индекс, если символы не совпадают
        while q > 0 and pattern[q] != text[i]:
            q = pi[q-1]  # переходим к предыдущему префиксу
        if pattern[q] == text[i]:  # если символы совпадают, увеличиваем индекс
            q += 1
        if q == m:  # если достигнуто терминальное состояние, значит строка-образец найдена
            return i - m + 1  # возвращаем индекс первого символа найденного образца в строке-тексте
    return -1  # если образец не найден, возвращаем -1


# считываем строку из файла
input_file = '/Users/a.sagitovich/programming/BFU/ASD/2sem/11-14/input.txt'
with open(input_file) as f:
    text = f.readline().strip()
print(f'\nИсходная строка: {text}')

# ищем образец в строке
pattern = input('\nВведите строку-образец: ')
index = kmp_search(text, pattern)

if index != -1:
    print(
        f'\nОбразец "{pattern}" найден в позиции {index}.\n')
else:
    print(f'\nОбразец "{pattern}" не найден в строке-тексте!\n')
